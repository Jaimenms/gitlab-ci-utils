#SonarQube template
#
# This job will run every time:
# - a branch with a name started with "feature" is pushed to the repository.
# - a merge request into main is created.
# - there is a push in main
#
#How to apply:
#
#  Insert the following line in your .gitlab-ci.yml file:
#    include:
#    - project: 'analytics/technology/applications/gitlab-ci-utils'
#      ref: 'main'
#      file: 'templates/sonarqube/sonarqube.yml'
#
#  Then, you just need to create a job that extends the .sonarqube template, per example:
#  (feel free to change the according to your pipeline)
#
#    sonarqube-check:
#      stage: quality
#      extends: .sonarqube
#      needs:
#        - job: build_job # this is the job that will generate the test reports xml
#          artifacts: true


.sonarqube:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature/ || $CI_COMMIT_BRANCH == "main"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"